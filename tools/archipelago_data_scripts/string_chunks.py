genericHeader = " autogenerated from Hamsandwich/tools/archipelago_data_scripts\n"

pyMainHeader = """from BaseClasses import ItemClassification
from worlds.generic.Rules import CollectionRule, add_rule
from worlds.loonyland.entrances import LLEntrance
from worlds.loonyland.items import LLItem, LLItemCat
from worlds.loonyland.locations import LLLocation, LLLocCat
from worlds.loonyland.regions import LLRegion
from worlds.loonyland.rules import (
    can_cleanse_crypts,
    can_kill_werewolves,
    can_reach_bats,
    can_reach_frog,
    can_reach_ghost,
    can_reach_mummy,
    can_reach_skeleton,
    can_reach_swampdog,
    can_reach_vampire,
    can_reach_wolves,
    have_39_badges,
    have_all_weapons,
    have_bombs,
    have_light_source,
    have_many_bombs,
    have_special_weapon_bullet,
    have_special_weapon_damage,
    hundred_percent,
)

ll_base_id: int = 2876900
"""

pyItemHeader = """loony_item_table: dict[str, LLItem] = {"""

pyRegionHeader = """loonyland_region_table: dict[str, LLRegion] = {"""


pyLocationHeader = """loonyland_location_table: dict[str, LLLocation] = {"""

pyRulesHeader = """def set_rules(multiworld, world, player):
    access_rules: dict[str, CollectionRule] = {"""

pyRulesFooter = """    for loc in multiworld.get_locations(player):
        if loc.name in access_rules:
            add_rule(loc, access_rules[loc.name])"""

pyEntranceHeader = """def set_entrance_rules(multiworld, world, player):
    loonyland_entrance_table: list[LLEntrance] = ["""

pyEntranceFooter = """    for region in multiworld.get_regions(player):
        for entry in loonyland_entrance_table:
            if entry.source_region == region.name:
                region.connect(connecting_region=world.get_region(entry.target_region), rule=entry.rule)"""

luaEntranceHeader = """function ent_valid(entry)
        if not entry.rule then
                entry.rule = function(state) return true end
        end
        return entry
end
"""